# This workflow performs additional tasks on a PR when
# someone (or start-release.yml) push to a vXXX branch.
# Those tasks are to push a new develop docker image, create
# release artifacts with the Linux and MacOS semgrep packages,
# update PyPy and homebrew, etc.

name: tests

on:
  workflow_dispatch:
  push:
    branches:
      # Sequence of patterns matched against refs/tags
      - "**-test-release"
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  # build-core-osx:
  #   name: Build the OSX binaries
  #   runs-on: ["self-hosted", "macOS", "X64"]
  #   steps:
  #     - name: Make checkout speedy
  #       run: git config --global fetch.parallel 50
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: true
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.10"
  #     - run: sudo python3 -m pip install pipenv==2022.6.7
  #     - name: Run OSX release script
  #       run: ./scripts/osx-release.sh
  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: semgrep-osx-${{ github.sha }}
  #         path: artifacts.zip

  # build-wheels-osx:
  #   runs-on: macos-12
  #   needs: [build-core-osx]
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: "recursive"
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: semgrep-osx-${{ github.sha }}
  #     - name: Install artifacts
  #       run: unzip artifacts.zip
  #     - uses: actions/setup-python@v4
  #       with:
  #         # This is just the Python version to build the wheels
  #         python-version: 3.7
  #     - name: Build the wheels
  #       env:
  #         # Relative because build-wheels does a 'cd cli'
  #         SEMGREP_CORE_BIN: ../artifacts/semgrep-core
  #       run: ./scripts/build-wheels.sh
  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: osx-wheel
  #         path: cli/dist.zip

  test-wheels-osx:
    runs-on: macos-12
    # needs: [build-wheels-osx]
    steps:
      # - uses: actions/download-artifact@v1
      #   with:
      #     name: osx-wheel
      # - name: unzip dist
      #   run: unzip ./osx-wheel/dist.zip
      # - name: install package
      #   run: pip3 install dist/*.whl
      # - name: test version
      #   run: semgrep --version
      # - name: e2e semgrep-core test
      #   run: echo '1 == 1' | semgrep -l python -e '$X == $X' -
      # - name: e2e spacegrep test
      #   run: echo '1 == 1' | semgrep -l generic -e '$X == $X' -
      - name: install package
        run: pip3 install semgrep==1.5.1
      - name: test package
        run: |
          otool -L /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/semgrep/bin/semgrep-core | grep /Users/

          if ! otool -L /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/semgrep/bin/semgrep-core | grep -qv /Users/; then
            echo "Error: semgrep-core has been linked with a user-specific libary which will not be available on other machines."
            exit 1
          fi

  # test-macos-release:
  #   name: test macOS release
  #   runs-on: macos-12
  #   steps:
  #     - name: install package
  #       run: pip3 install semgrep==1.5.1
  #     - name: test package
  #       run: |
  #         MATCHES=$(otool -L /opt/homebrew/lib/python3.10/site-packages/semgrep/bin/semgrep-core | grep /Users/)
  #         echo $MATCHES
  #         if [ -z $MATCHES ]; then
  #           echo "Error: semgrep-core has been linked with a user-specific libary which will not be available on other machines."
  #           exit 1;
  #         fi
