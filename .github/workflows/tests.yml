# The goals of this workflow are to check that:
# - we can build semgrep-core and semgrep
# - we can build a Docker image as well as Linux and MacOS binaries
# - all our tests (the one in semgrep-core and the one in semgrep-cli) are passing
# - we don't have any perf regressions in our benchmarks

name: tests

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - "**.md"
  push:
    branches:
      - develop
    paths-ignore:
      - "**.md"

jobs:
  build-core-m1:
    name: Build the OSX M1 binaries
    runs-on: [self-hosted, macOS, ARM64]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Run OSX release script
        env:
          # M1 builds failing due to a permissions issue. this cleanup is an optimization,
          # and we can revisit re-enabling cleanup when we have more time/resources to debug.
          HOMEBREW_NO_INSTALL_CLEANUP: "true"
        run: ./scripts/osx-m1-release.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-m1-${{ github.sha }}
          path: artifacts.zip

  build-wheels-m1:
    runs-on: [self-hosted, macOS, ARM64]
    needs: [build-core-m1]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: semgrep-m1-${{ github.sha }}
      - name: Install artifacts
        run: unzip artifacts.zip
      - name: Build the wheels
        env:
          # Relative because build-wheels does a 'cd cli'
          SEMGREP_CORE_BIN: ../artifacts/semgrep-core
        run: ./scripts/build-wheels-m1.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: m1-wheel
          path: cli/dist.zip

  # TODO(devops): extract this into a reusable workflow
  test-wheels-m1:
    runs-on: [self-hosted, macOS, ARM64]
    needs: [build-wheels-m1]
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: m1-wheel
      - name: unzip dist
        run: unzip ./m1-wheel/dist.zip
      - name: install package
        run: pip3 install dist/*.whl
      - name: test version
        run: semgrep --version
      - name: e2e semgrep-core test
        run: echo '1 == 1' | semgrep -l python -e '$X == $X' -
      - name: e2e spacegrep test
        run: echo '1 == 1' | semgrep -d -l generic -e '$X == $X' -
      - name: test dynamically linked libraries are in /usr/lib/
        shell: bash {0}
        run: |
          otool -L /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/semgrep/bin/semgrep-core > otool.txt
          if [ $? -ne 0 ]; then
            echo "Failed to list dynamically linked libraries.";
            cat otool.txt;
            exit 1;
          fi
          NON_USR_LIB_DYNAMIC_LIBRARIES=$(cat otool.txt | tail -n +2 | grep -v "^\s*/usr/lib/")
          if [ $? -eq 0 ]; then
            echo "Error: semgrep-core has been dynamically linked against libraries outside /usr/lib:"
            echo $NON_USR_LIB_DYNAMIC_LIBRARIES
            exit 1;
          fi;
